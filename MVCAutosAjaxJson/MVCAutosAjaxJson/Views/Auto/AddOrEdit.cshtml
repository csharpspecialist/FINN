@model MVCAutosAjaxJson.Models.CarShow

@{

    Layout = null;
}

<h2>Add / Edit Page</h2>

@using (Html.BeginForm("AddOrEdit", "CarShow", FormMethod.Post, new { enctype= "multipart/form-data", onSubmit = "return jQAjaxInfo(this);"}))
{
    @Html.AntiForgeryToken()
<div class="row">

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(Model => Model.AutoID)
        @Html.HiddenFor(Model => Model.ImagePath)

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.AutoID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AutoID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AutoID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.YearMade, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.YearMade, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.YearMade, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>
            </div>

            <script src="~/Scripts/JScript.js"></script>

        </div>  @*closing div for 1st half of md-6*@
        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*<img src="~/AppFiles/Images/image soon.png" />*@
                    <img src="@Url.Content(Model.ImagePath)" style="margin:10px" height="200" width="200" id="imgPrev" />
                    <input type="file" name="ImageUpload" accept="image/jpeg, image/jpg" onchange="ShowImgPrev(this, document.getElementById('imgPrev'))" />

                    @*@Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })*@
                </div>
            </div>



        </div>
    </div>

</div>

}

<div>
        @Html.ActionLink("Back to View All Page", "Index")
    </div>    
